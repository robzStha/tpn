//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.0.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.official.trialpassnepal;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import com.github.barteksc.pdfviewer.PDFView;
import com.github.barteksc.pdfviewer.ScrollBar;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.builder.PostActivityStarter;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class PdfActivity_
    extends PdfActivity
    implements HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(R.layout.activity_pdf);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        PdfActivity_.NonConfigurationInstancesHolder nonConfigurationInstance = ((PdfActivity_.NonConfigurationInstancesHolder) super.getLastCustomNonConfigurationInstance());
        if (nonConfigurationInstance!= null) {
            uri = nonConfigurationInstance.uri;
            pageNumber = nonConfigurationInstance.pageNumber;
        }

    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static PdfActivity_.IntentBuilder_ intent(Context context) {
        return new PdfActivity_.IntentBuilder_(context);
    }

    public static PdfActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new PdfActivity_.IntentBuilder_(fragment);
    }

    public static PdfActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new PdfActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.pdfView = ((PDFView) hasViews.findViewById(R.id.pdfView));
        this.scrollBar = ((ScrollBar) hasViews.findViewById(R.id.scrollBar));
        afterViews();
    }

    @Override
    public Object getLastCustomNonConfigurationInstance() {
        PdfActivity_.NonConfigurationInstancesHolder nonConfigurationInstance = ((PdfActivity_.NonConfigurationInstancesHolder) super.getLastCustomNonConfigurationInstance());
        if (nonConfigurationInstance == null) {
            return null;
        }
        return nonConfigurationInstance.superNonConfigurationInstance;
    }

    @Override
    public PdfActivity_.NonConfigurationInstancesHolder onRetainCustomNonConfigurationInstance() {
        PdfActivity_.NonConfigurationInstancesHolder nonConfigurationInstanceState_ = new PdfActivity_.NonConfigurationInstancesHolder();
        nonConfigurationInstanceState_.superNonConfigurationInstance = super.onRetainCustomNonConfigurationInstance();
        nonConfigurationInstanceState_.uri = uri;
        nonConfigurationInstanceState_.pageNumber = pageNumber;
        return nonConfigurationInstanceState_;
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater menuInflater = getMenuInflater();
        menuInflater.inflate(R.menu.options, menu);
        return super.onCreateOptionsMenu(menu);
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case  42 :
            {
                PdfActivity_.this.onResult(resultCode, data);
                break;
            }
        }
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<PdfActivity_.IntentBuilder_>
    {
        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, PdfActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), PdfActivity_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), PdfActivity_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public PostActivityStarter startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent, requestCode, lastOptions);
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        context.startActivity(intent, lastOptions);
                    }
                }
            }
            return new PostActivityStarter(context);
        }
    }

    private static class NonConfigurationInstancesHolder {
        public Uri uri;
        public Object superNonConfigurationInstance;
        public Integer pageNumber;
    }
}
